services:
  db:
    image: postgres:17
    env_file:
      - backend/.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER}" ]
      interval: 2s
      timeout: 3s
      retries: 5
    volumes:
      - db_data:/var/lib/pgsql/data
  backend:
    build: ./backend
    env_file:
      - backend/.env
    working_dir: /backend
    command:
      - python3
      - manage.py
      - runserver
      - 0.0.0.0:8000
    volumes:
      - ./backend:/backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
  frontend:
    build:
      context: ./frontend
      target: dev
    volumes:
      - ./frontend:/frontend:cached
      - /frontend/node_modules
    ports:
      - "3000:3000"
    environment:
      CHOKIDAR_USEPOLLING: 'true'
    command: [ "npm","run","dev","--","--host","0.0.0.0","--port","3000" ]
    depends_on:
      - backend
volumes:
  db_data:


